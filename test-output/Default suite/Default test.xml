<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Thaos-MacBook-Pro.local" failures="0" tests="104" name="Default test" time="11.805" errors="0" timestamp="2023-08-24T12:50:56 ICT">
  <testcase classname="testSetup.Setup" name="@BeforeClass setup" time="3.447">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 114
Current browser version is 116.0.5845.110 with binary path /Applications/Google Chrome.app/Contents/MacOS/Google Chrome 
Host info: host: &amp;apos;Thaos-MacBook-Pro.local&amp;apos;, ip: &amp;apos;172.19.226.250&amp;apos;
Build info: version: &amp;apos;4.8.1&amp;apos;, revision: &amp;apos;8ebccac989&amp;apos;
System info: os.name: &amp;apos;Mac OS X&amp;apos;, os.arch: &amp;apos;x86_64&amp;apos;, os.version: &amp;apos;10.16&amp;apos;, java.version: &amp;apos;15&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 114
Current browser version is 116.0.5845.110 with binary path /Applications/Google Chrome.app/Contents/MacOS/Google Chrome 
Host info: host: 'Thaos-MacBook-Pro.local', ip: '172.19.226.250'
Build info: version: '4.8.1', revision: '8ebccac989'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:148)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:106)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:67)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:229)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:101)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:82)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:71)
at testSetup.Setup.setup(Setup.java:41)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:180)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeClass setup -->
  <testcase classname="testCases.RegisterTestCases" name="registerWithExistedAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- registerWithExistedAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="registerWithExistedAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- registerWithExistedAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="registerWithExistedAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- registerWithExistedAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="registerWithExistedAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- registerWithExistedAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="registerWithExistedAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- registerWithExistedAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="registerWithExistedAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- registerWithExistedAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="registerWithExistedAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- registerWithExistedAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="registerWithExistedAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- registerWithExistedAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="registerWithExistedAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- registerWithExistedAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="registerWithExistedAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- registerWithExistedAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="registerWithExistedAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- registerWithExistedAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="registerWithExistedAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- registerWithExistedAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="registerWithExistedAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- registerWithExistedAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="registerWithExistedAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- registerWithExistedAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="registerWithExistedAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- registerWithExistedAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="validAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- validAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="validAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- validAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="validAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- validAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="validAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- validAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="validAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- validAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="validAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- validAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="validAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- validAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="validAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- validAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="validAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- validAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="validAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- validAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="validAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- validAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="validAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- validAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="validAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- validAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="validAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- validAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="validAccountTest" time="0.0">
    <skipped/>
  </testcase> <!-- validAccountTest -->
  <testcase classname="testCases.RegisterTestCases" name="invalidConpassTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidConpassTest -->
  <testcase classname="testCases.RegisterTestCases" name="invalidConpassTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidConpassTest -->
  <testcase classname="testCases.RegisterTestCases" name="invalidConpassTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidConpassTest -->
  <testcase classname="testCases.RegisterTestCases" name="invalidConpassTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidConpassTest -->
  <testcase classname="testCases.RegisterTestCases" name="invalidConpassTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidConpassTest -->
  <testcase classname="testCases.RegisterTestCases" name="invalidConpassTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidConpassTest -->
  <testcase classname="testCases.RegisterTestCases" name="invalidConpassTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidConpassTest -->
  <testcase classname="testCases.RegisterTestCases" name="invalidConpassTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidConpassTest -->
  <testcase classname="testCases.RegisterTestCases" name="invalidConpassTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidConpassTest -->
  <testcase classname="testCases.RegisterTestCases" name="invalidConpassTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidConpassTest -->
  <testcase classname="testCases.RegisterTestCases" name="invalidConpassTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidConpassTest -->
  <testcase classname="testCases.RegisterTestCases" name="invalidConpassTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidConpassTest -->
  <testcase classname="testCases.RegisterTestCases" name="invalidConpassTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidConpassTest -->
  <testcase classname="testCases.RegisterTestCases" name="invalidConpassTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidConpassTest -->
  <testcase classname="testCases.RegisterTestCases" name="invalidConpassTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidConpassTest -->
  <testcase classname="testCases.RegisterTestCases" name="TrailingLeadingTest" time="0.0">
    <skipped/>
  </testcase> <!-- TrailingLeadingTest -->
  <testcase classname="testCases.RegisterTestCases" name="TrailingLeadingTest" time="0.0">
    <skipped/>
  </testcase> <!-- TrailingLeadingTest -->
  <testcase classname="testCases.RegisterTestCases" name="TrailingLeadingTest" time="0.0">
    <skipped/>
  </testcase> <!-- TrailingLeadingTest -->
  <testcase classname="testCases.RegisterTestCases" name="TrailingLeadingTest" time="0.0">
    <skipped/>
  </testcase> <!-- TrailingLeadingTest -->
  <testcase classname="testCases.RegisterTestCases" name="TrailingLeadingTest" time="0.0">
    <skipped/>
  </testcase> <!-- TrailingLeadingTest -->
  <testcase classname="testCases.RegisterTestCases" name="TrailingLeadingTest" time="0.0">
    <skipped/>
  </testcase> <!-- TrailingLeadingTest -->
  <testcase classname="testCases.RegisterTestCases" name="TrailingLeadingTest" time="0.0">
    <skipped/>
  </testcase> <!-- TrailingLeadingTest -->
  <testcase classname="testCases.RegisterTestCases" name="TrailingLeadingTest" time="0.0">
    <skipped/>
  </testcase> <!-- TrailingLeadingTest -->
  <testcase classname="testCases.RegisterTestCases" name="TrailingLeadingTest" time="0.0">
    <skipped/>
  </testcase> <!-- TrailingLeadingTest -->
  <testcase classname="testCases.RegisterTestCases" name="passMinimumLengthTest" time="0.0">
    <skipped/>
  </testcase> <!-- passMinimumLengthTest -->
  <testcase classname="testCases.RegisterTestCases" name="passMinimumLengthTest" time="0.0">
    <skipped/>
  </testcase> <!-- passMinimumLengthTest -->
  <testcase classname="testCases.RegisterTestCases" name="passMinimumLengthTest" time="0.0">
    <skipped/>
  </testcase> <!-- passMinimumLengthTest -->
  <testcase classname="testCases.RegisterTestCases" name="passMinimumLengthTest" time="0.0">
    <skipped/>
  </testcase> <!-- passMinimumLengthTest -->
  <testcase classname="testCases.RegisterTestCases" name="passMinimumCharacterTypeTest" time="0.0">
    <skipped/>
  </testcase> <!-- passMinimumCharacterTypeTest -->
  <testcase classname="testCases.RegisterTestCases" name="passMinimumCharacterTypeTest" time="0.0">
    <skipped/>
  </testcase> <!-- passMinimumCharacterTypeTest -->
  <testcase classname="testCases.RegisterTestCases" name="passMinimumCharacterTypeTest" time="0.0">
    <skipped/>
  </testcase> <!-- passMinimumCharacterTypeTest -->
  <testcase classname="testCases.RegisterTestCases" name="passMinimumCharacterTypeTest" time="0.0">
    <skipped/>
  </testcase> <!-- passMinimumCharacterTypeTest -->
  <testcase classname="testCases.RegisterTestCases" name="passMinimumCharacterTypeTest" time="0.0">
    <skipped/>
  </testcase> <!-- passMinimumCharacterTypeTest -->
  <testcase classname="testCases.RegisterTestCases" name="passMinimumCharacterTypeTest" time="0.0">
    <skipped/>
  </testcase> <!-- passMinimumCharacterTypeTest -->
  <testcase classname="testCases.RegisterTestCases" name="passMinimumCharacterTypeTest" time="0.0">
    <skipped/>
  </testcase> <!-- passMinimumCharacterTypeTest -->
  <testcase classname="testCases.RegisterTestCases" name="passMinimumCharacterTypeTest" time="0.0">
    <skipped/>
  </testcase> <!-- passMinimumCharacterTypeTest -->
  <testcase classname="testCases.RegisterTestCases" name="passMinimumCharacterTypeTest" time="0.0">
    <skipped/>
  </testcase> <!-- passMinimumCharacterTypeTest -->
  <testcase classname="testCases.RegisterTestCases" name="subcribeDefaultTest" time="0.0">
    <skipped/>
  </testcase> <!-- subcribeDefaultTest -->
  <testcase classname="testCases.RegisterTestCases" name="newsLetterSubscribeTest" time="0.0">
    <skipped/>
  </testcase> <!-- newsLetterSubscribeTest -->
  <testcase classname="testCases.RegisterTestCases" name="newsLetterSubscribeTest" time="0.0">
    <skipped/>
  </testcase> <!-- newsLetterSubscribeTest -->
  <testcase classname="testCases.RegisterTestCases" name="newsLetterSubscribeTest" time="0.0">
    <skipped/>
  </testcase> <!-- newsLetterSubscribeTest -->
  <testcase classname="testCases.RegisterTestCases" name="newsLetterSubscribeTest" time="0.0">
    <skipped/>
  </testcase> <!-- newsLetterSubscribeTest -->
  <testcase classname="testCases.RegisterTestCases" name="newsLetterSubscribeTest" time="0.0">
    <skipped/>
  </testcase> <!-- newsLetterSubscribeTest -->
  <testcase classname="testCases.RegisterTestCases" name="newsLetterSubscribeTest" time="0.0">
    <skipped/>
  </testcase> <!-- newsLetterSubscribeTest -->
  <testcase classname="testCases.RegisterTestCases" name="newsLetterSubscribeTest" time="0.0">
    <skipped/>
  </testcase> <!-- newsLetterSubscribeTest -->
  <testcase classname="testCases.RegisterTestCases" name="newsLetterSubscribeTest" time="0.0">
    <skipped/>
  </testcase> <!-- newsLetterSubscribeTest -->
  <testcase classname="testCases.RegisterTestCases" name="newsLetterSubscribeTest" time="0.0">
    <skipped/>
  </testcase> <!-- newsLetterSubscribeTest -->
  <testcase classname="testCases.RegisterTestCases" name="newsLetterSubscribeTest" time="0.0">
    <skipped/>
  </testcase> <!-- newsLetterSubscribeTest -->
  <testcase classname="testCases.RegisterTestCases" name="invalidFormatEmailTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidFormatEmailTest -->
  <testcase classname="testCases.RegisterTestCases" name="invalidFormatEmailTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidFormatEmailTest -->
  <testcase classname="testCases.RegisterTestCases" name="invalidFormatEmailTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidFormatEmailTest -->
  <testcase classname="testCases.RegisterTestCases" name="invalidFormatEmailTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidFormatEmailTest -->
  <testcase classname="testCases.RegisterTestCases" name="invalidFormatEmailTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidFormatEmailTest -->
  <testcase classname="testCases.RegisterTestCases" name="invalidFormatEmailTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidFormatEmailTest -->
  <testcase classname="testCases.RegisterTestCases" name="invalidFormatEmailTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidFormatEmailTest -->
  <testcase classname="testCases.RegisterTestCases" name="invalidFormatEmailTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidFormatEmailTest -->
  <testcase classname="testCases.RegisterTestCases" name="invalidFormatEmailTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidFormatEmailTest -->
  <testcase classname="testCases.RegisterTestCases" name="invalidFormatEmailTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidFormatEmailTest -->
  <testcase classname="testCases.RegisterTestCases" name="TrailingLeadingNameTest" time="0.0">
    <skipped/>
  </testcase> <!-- TrailingLeadingNameTest -->
  <testcase classname="testCases.RegisterTestCases" name="TrailingLeadingNameTest" time="0.0">
    <skipped/>
  </testcase> <!-- TrailingLeadingNameTest -->
  <testcase classname="testCases.RegisterTestCases" name="TrailingLeadingNameTest" time="0.0">
    <skipped/>
  </testcase> <!-- TrailingLeadingNameTest -->
  <testcase classname="testCases.RegisterTestCases" name="TrailingLeadingNameTest" time="0.0">
    <skipped/>
  </testcase> <!-- TrailingLeadingNameTest -->
  <testcase classname="testCases.RegisterTestCases" name="TrailingLeadingNameTest" time="0.0">
    <skipped/>
  </testcase> <!-- TrailingLeadingNameTest -->
  <testcase classname="testCases.RegisterTestCases" name="TrailingLeadingNameTest" time="0.0">
    <skipped/>
  </testcase> <!-- TrailingLeadingNameTest -->
  <testcase classname="testCases.RegisterTestCases" name="emptyFields" time="0.0">
    <skipped/>
  </testcase> <!-- emptyFields -->
  <testcase classname="testCases.RegisterTestCases" name="emptyFields" time="0.0">
    <skipped/>
  </testcase> <!-- emptyFields -->
  <testcase classname="testCases.RegisterTestCases" name="emptyFields" time="0.0">
    <skipped/>
  </testcase> <!-- emptyFields -->
  <testcase classname="testCases.RegisterTestCases" name="emptyFields" time="0.0">
    <skipped/>
  </testcase> <!-- emptyFields -->
  <testcase classname="testCases.RegisterTestCases" name="emptyFields" time="0.0">
    <skipped/>
  </testcase> <!-- emptyFields -->
  <testcase classname="testCases.RegisterTestCases" name="emptyFields" time="0.0">
    <skipped/>
  </testcase> <!-- emptyFields -->
  <testcase classname="testCases.RegisterTestCases" name="emptyFields" time="0.0">
    <skipped/>
  </testcase> <!-- emptyFields -->
  <testcase classname="testCases.RegisterTestCases" name="emptyFields" time="0.0">
    <skipped/>
  </testcase> <!-- emptyFields -->
  <testcase classname="testCases.RegisterTestCases" name="emptyFields" time="0.0">
    <skipped/>
  </testcase> <!-- emptyFields -->
  <testcase classname="testCases.RegisterTestCases" name="emptyFields" time="0.0">
    <skipped/>
  </testcase> <!-- emptyFields -->
</testsuite> <!-- Default test -->
